using System;
using System.Collections.Generic;
using System.Linq;

class Transaction
{
    public string Description;
    public decimal Amount;
    public string Type; // "Income" or "Expense"
    public string Category;
    public DateTime Date;

    public Transaction(string description, decimal amount, string type, string category, DateTime date)
    {
        Description = description;
        Amount = amount;
        Type = type;
        Category = category;
        Date = date;
    }

    public void Print()
    {
        Console.WriteLine($"{Date.ToShortDateString()} | {Type} | {Category} | {Amount:C} | {Description}");
    }
}

class BudgetTracker
{
    List<Transaction> transactions = new List<Transaction>();

    public void AddTransaction()
    {
        try
        {
            Console.Write("Enter description: ");
            string desc = Console.ReadLine();

            Console.Write("Enter amount: ");
            decimal amount = decimal.Parse(Console.ReadLine());

            Console.Write("Enter type (Income/Expense): ");
            string type = Console.ReadLine();

            Console.Write("Enter category: ");
            string category = Console.ReadLine();

            Transaction t = new Transaction(desc, amount, type, category, DateTime.Now);
            transactions.Add(t);
            Console.WriteLine("Transaction added.\n");
        }
        catch
        {
            Console.WriteLine("Invalid input. Try again.\n");
        }
    }

    public void ShowSummary()
    {
        decimal income = transactions.Where(t => t.Type == "Income").Sum(t => t.Amount);
        decimal expense = transactions.Where(t => t.Type == "Expense").Sum(t => t.Amount);
        decimal savings = income - expense;

        Console.WriteLine($"\nTotal Income:  {income:C}");
        Console.WriteLine($"Total Expense: {expense:C}");
        Console.WriteLine($"Net Savings:   {savings:C}\n");
    }

    public void ShowByCategory()
    {
        var categories = transactions
            .Where(t => t.Type == "Expense")
            .GroupBy(t => t.Category)
            .Select(g => new { Category = g.Key, Total = g.Sum(t => t.Amount) });

        Console.WriteLine("\nExpenses by Category:");
        foreach (var c in categories)
        {
            Console.WriteLine($"{c.Category}: {c.Total:C}");
        }
        Console.WriteLine();
    }

    public void ShowAll()
    {
        Console.WriteLine("\nAll Transactions:");
        foreach (var t in transactions)
        {
            t.Print();
        }
        Console.WriteLine();
    }
}

class Program
{
    static void Main()
    {
        BudgetTracker tracker = new BudgetTracker();
        string choice;

        Console.WriteLine("=== Personal Budget Tracker ===");

        do
        {
            Console.WriteLine("1. Add Transaction");
            Console.WriteLine("2. View All Transactions");
            Console.WriteLine("3. View Summary");
            Console.WriteLine("4. View Expenses by Category");
            Console.WriteLine("0. Exit");
            Console.Write("Choose an option: ");
            choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    tracker.AddTransaction();
                    break;
                case "2":
                    tracker.ShowAll();
                    break;
                case "3":
                    tracker.ShowSummary();
                    break;
                case "4":
                    tracker.ShowByCategory();
                    break;
                case "0":
                    Console.WriteLine("Goodbye!");
                    break;
                default:
                    Console.WriteLine("Invalid option.\n");
                    break;
            }
        } while (choice != "0");
    }
}
